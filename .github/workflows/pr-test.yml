name: SonarQube
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect changed modules
        id: set-modules
        run: |
          git fetch origin develop
          changed_files=$(git diff --name-only origin/develop...${{ github.sha }})
          changed_modules=$(echo "$changed_files" | cut -d/ -f1 | sort -u)
          
          if echo "$changed_modules" | grep -q '^common$'; then
            modules=$(find . -maxdepth 1 -type d ! -name '.' | \
              sed 's|^\./||' | \
              grep -Ev '^(\.git|\.github|gradle|ten-private)$' | \
              jq -R -s -c 'split("\n") | map(select(length > 0))')

            echo "modules=$modules" >> "$GITHUB_OUTPUT"
          else
            excluded_dirs="\.github|gradle|ten-private|common"
            pattern=$(find . -maxdepth 1 -type d ! -name '.' \
              | sed 's|^\./||' \
              | grep -vE "^($excluded_dirs)$" \
              | paste -sd'|' - \
              | awk '{ print "^(" $0 ")$" }')
          
            modules=$(echo "$changed_modules" | grep -E "$pattern" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "modules=$modules" >> "$GITHUB_OUTPUT"
          fi
  test:
    needs: detect-changes
    name: test
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.modules != '[]' && needs.detect-changes.outputs.modules != '' }}
    strategy:
      matrix:
        module: ${{ fromJson(needs.detect-changes.outputs.modules) }}
      fail-fast: false  # 첫 번째 실패가 발생해도 나머지 작업들은 계속 진행됨
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTION_TOKEN }}
          submodules: true
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Test ${{ matrix.module }}
        run: ./gradlew ${{ matrix.module }}:test
      - name: Upload build outputs
        if: always()  # 실패해도 업로드 시도
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.module }}
          path: ${{ matrix.module }}/
  sonar:
    needs: [test,detect-changes]
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.modules != '[]' && needs.detect-changes.outputs.modules != '' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Download build outputs
        uses: actions/download-artifact@v4
        with:
          path: ./
      - name: Test and analyze ${{ matrix.module }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # PR 정보를 가져오려면 필요합니다.
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          MODULES_JSON: ${{ needs.detect-changes.outputs.modules }}
        run: |
          MODULES=$(echo "$MODULES_JSON" | jq -r '.[]' | paste -sd "," -)
          SONAR_COVERAGE=$(echo $MODULES | tr ',' '\n' | sed 's|^|./|; s|$|/build/reports/jacoco/test/jacocoTestReport.xml|' | paste -sd "," -)
          ls -al
          ./gradlew sonar \
            -Dsonar.inclusions=$MODULES \
            -Dsonar.coverage.jacoco.xmlReportPaths=$SONAR_COVERAGE