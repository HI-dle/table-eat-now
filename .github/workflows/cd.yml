name: CD - Beanstalk server deploy
on:
  workflow_call:
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - name: Checkout with exact SHA
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect changed modules
        id: set-modules
        run: |
          git fetch origin develop
          changed_files=$(git diff --name-only origin/develop...${{ github.sha }})
          changed_modules=$(echo "$changed_files" | cut -d/ -f1 | sort -u)
          
          if echo "$changed_modules" | grep -q '^common$'; then
            modules=$(find . -maxdepth 1 -type d ! -name '.' | \
              sed 's|^\./||' | \
              grep -Ev '^(\.git|\.github|gradle|ten-private)$' | \
              jq -R -s -c 'split("\n") | map(select(length > 0))')

            echo "modules=$modules" >> "$GITHUB_OUTPUT"
          else
            excluded_dirs="\.github|gradle|ten-private|common"
            pattern=$(find . -maxdepth 1 -type d ! -name '.' \
              | sed 's|^\./||' \
              | grep -vE "^($excluded_dirs)$" \
              | paste -sd'|' - \
              | awk '{ print "^(" $0 ")$" }')
          
            modules=$(echo "$changed_modules" | grep -E "$pattern" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "modules=$modules" >> "$GITHUB_OUTPUT"
          fi
  deploy:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.modules != '[]' && needs.detect-changes.outputs.modules != '' }}
    strategy:
      matrix:
        module: ${{ fromJson(needs.detect-changes.outputs.modules) }}
      fail-fast: false  # 첫 번째 실패가 발생해도 나머지 작업들은 계속 진행됨
    steps:
      - name: Checkout with exact SHA
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTION_TOKEN }}
          submodules: true
          fetch-depth: 0  # Shallow clones should be disabled

      # cp ${{ matrix.module }}//nginx/conf.d/proxy.conf deploy/.platform/nginx/conf.d/proxy.conf 2>/dev/null
      - name: Generate deployment package
        run: |
          mkdir -p deploy/.platform/nginx/conf.d
          
          cp ten-private/.env.${{ matrix.module }} deploy/.env.${{ matrix.module }} 2>/dev/null
          cp ${{ matrix.module }}/docker-compose.yml deploy/docker-compose.yml
          cd deploy && zip -r deploy.zip .

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: deploy-time
        with:
          format: YYYYMMDD_HH-mm-ss
          utcOffset: "+09:00"

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: table-eat-now-${{ matrix.module }}-blue
          environment_name: Table-eat-now-${{ matrix.module }}-blue-env
          version_label: "github-action--${{ steps.deploy-time.outputs.formattedTime }}"
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 200